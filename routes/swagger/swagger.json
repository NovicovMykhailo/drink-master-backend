{
	"openapi": "3.0.1",
	"info": {
		"version": "1.0.0",
		"title": "Drink Master",
		"description": "Drink Master API",
		"contact": {
			"email": "drink-master-backend@ukr.net"
		},
		"license": {
			"name": "MIT",
			"url": "https://opensource.org/licenses/MIT"
		}
	},
	"consumes": ["application/json", "multipart/form-data"],
	"produces": ["application/json"],
	"servers": [{ "url": "http://localhost:3000" }],
	"paths": {
		"/users/register": {
			"post": {
				"summary": "User Registration",
				"tags": ["users"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegistrationRequest"
							}
						}
					},
					"description": "Request for user registration",
					"required": true
				},
				"responses": {
					"201": {
						"description": "Successful user registration",
						"content": {
							"application/json": {
								"example": {
									"user": {
										"email": "user@example.com",
										"name": "John Doe",
										"avatarURL": "https://example.com/avatar.png"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)"
					},
					"409": {
						"description": "Conflict: Email in use"
					}
				}
			}
		},
		"/users/login": {
			"post": {
				"summary": "User Login",
				"tags": ["users"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/authenticationRequest"
							}
						}
					},
					"description": "Request for user login",
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful user login",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/authenticationResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					},
					"401": {
						"description": "Unauthorized: Email or password is wrong"
					},
					"409": {
						"description": "Email in use",
						"content": {}
					}
				}
			}
		},
		"/users/current": {
			"get": {
				"summary": "Get Current User",
				"tags": ["users"],
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Need only Auth token",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/securitySchemes"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/currentResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					},
					"401": {
						"description": "Unauthorized: Not authorized"
					}
				}
			}
		},
		"/users/logout": {
			"post": {
				"summary": "User Logout",
				"tags": ["users"],
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Need only Auth token",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/securitySchemes"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Successful user logout",
						"content": {
							"application/json": {
								"example": {
									"message": "Logout successful"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					},
					"401": {
						"description": "Unauthorized: Not authorized"
					}
				}
			}
		},
		"/users/update": {
			"patch": {
				"tags": ["users"],
				"summary": "Update user info",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Update user info",
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"allOf": [
									{ "$ref": "#/components/schemas/securitySchemes" },
									{ "$ref": "#/components/schemas/updateRequest" }
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/updateResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					},
					"401": {
						"description": "Unauthorized: Not authorized"
					}
				}
			}
		}
	},

	"components": {
		"schemas": {
			"RegistrationResponse": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"format": "email"
					},
					"name": {
						"type": "string"
					},
					"avatarURL": {
						"type": "string"
					}
				}
			},
			"RegistrationRequest": {
				"type": "object",
				"required": ["email", "password", "name"],
				"properties": {
					"email": {
						"type": "string",
						"description": "User's email",
						"format": "email"
					},
					"name": {
						"type": "string",
						"description": "User's name",
						"example": "Poly"
					},
					"password": {
						"type": "string",
						"description": "User's password",
						"example": "qwerty123"
					}
				},
				"example": {
					"email": "ajax@mail.com",
					"name": "Poly",
					"password": "123456789"
				}
			},

			"authenticationRequest": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"description": "User's email",
						"format": "email"
					},
					"password": {
						"type": "string",
						"description": "User's password"
					}
				},
				"required": ["email", "password"]
			},
			"authenticationResponse": {
				"type": "object",
				"items": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string",
							"description": "unique identifier",
							"example": "65165165165"
						},
						"email": {
							"type": "email",
							"description": "User's email",
							"example": "mango@mail.com"
						},
						"name": {
							"description": "User's name",
							"example": "Mango",
							"type": "string"
						},
						"avatarUrl": { "type": "string", "description": "avatar link" }
					}
				},
				"example": {
					"token": "15115551",
					"user": {
						"id": "000555000555dfdfd5f05df",
						"email": "ajax@mail.com",
						"name": "ajax",
						"avatarURL": "https://s.gravatar.com/avatar/"
					}
				}
			},
			"currentResponse": {
				"type": "object",
				"items": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string",
							"description": "unique identifier",
							"example": "65165165165"
						},
						"email": {
							"type": "email",
							"description": "User's email",
							"example": "mango@mail.com"
						},
						"name": {
							"description": "User's name",
							"example": "Mango",
							"type": "string"
						},
						"avatarUrl": { "type": "string", "description": "avatar link" }
					}
				},
				"example": {
					"_id": "65165163513513",
					"name": "ajax",
					"email": "ajax@mail.com",
					"avatarURL": "https://s.gravatar.com/avatar"
				}
			},
			"updateRequest": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "User's name"
					},
					"avatarUrl": {
						"type": "string",
						"description": "Avatar link"
					}
				},
				"required": []
			},
			"updateResponse": {
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string",
							"description": "unique identifier",
							"example": "65165165165"
						},
						"email": {
							"type": "email",
							"description": "User's email",
							"example": "mango@mail.com"
						},
						"name": {
							"description": "User's name",
							"example": "Mango",
							"type": "string"
						},
						"avatarUrl": { "type": "string", "description": "avatar link" }
					}
				},
				"example": {
					"_id": "65165163513513",
					"name": "ajax",
					"email": "ajax@mail.com",
					"avatarURL": "https://s.gravatar.com/avatar"
				}
			}
		},
		"securitySchemes": {
			"Bearer": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}
